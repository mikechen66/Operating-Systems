Listing 8-13: A disassembly of an iOS 5.1 kernel, showing the system call table

802CCBAC_sysent DCD 0                  ; Called from unix_syscall+C4
...
802CCBC4        DCW 1                  ; int16_t    sy_narg; (exit has one argument)
802CCBC6        DCB 0                  ; int8_t     sy_resv;
802CCBC7        DCB 0                  ; int8_t     sy_flags;
802CCBC8        DCD_exit+1             ; sy_call_t *sy_call = exit(int);
802CCBCC        DCD 0                  ; sy_munge_t *sy_arg_munge32;
802CCBD0        DCD 0                  ; sy_munge_t *sy_arg_munge64;
802CCBD4        DCD SYSCALL_RET_NONE   ; int32_t    sy_return_type; (0 = void)
802CCBD8        DCW 4                  ; uint16_t   sy_arg_bytes; (1 arg = 4 bytes)
802CCBDA        DCW 0                  ; Padding to 32-bit boundary
              ; ------------------------------------------
802CCBDC        DCW 0                  ; int16_t    sy_narg; (fork has no arguments)
802CCBDE        DCB 0                  ; int8_t     sy_resv;
802CCBDD        DCW 0                  ; int8_t     sy_flags;
802CCBE0        DCD fork+1             ; sy_call_t *sy_call = pid_t fork();
802CCBE4        DCD 0                  ; sy_munge_t *sy_arg_munge32;
802CCBE8        DCD 0                  ; sy_munge_t *sy_arg_munge64;
802CCBEC        DCD SYSCALL_RET_INT_T  ; int32_t    sy_return_type; (pid_t is an int)
802CCBF0        DCW 0                  ; uint16_t   sy_arg_bytes; (fork has none)
802CCBF2        DCW 0                  ; Padding to 32-bit boundary
               ;----------------------------------------  
802CCBF4        DCB 3                  ; int8_t     sy_narg; (read(2) has three args)
802CCBF5        DCB 0                  ; int8_t     sy_flags;
802CCBF6        DCW 0                  ; padding to 32-bit boundary
802CCBF8        DCD _read+1            ; sy_call_t *sy_call = read(int,void *, size_t);
802CCBFC        DCD 0                  ; sy_munge_t *sy_arg_munge32;
802CCC00        DCD 0                  ; sy_munge_t *sy_arg_munge64;
802CCC04        DCD SYSCALL_RET_SSIZE_T; int32_t     sy_return_type;
802CCC08        DCW 0xC                ; uint16_t    sy_arg_bytes; (3 args = 12 bytes)
.. //
.. // and on, and on , and onâ€¦
.. //
802CF4D4_nsysent DCD 0x1B7             ; NUM_SYSENT
