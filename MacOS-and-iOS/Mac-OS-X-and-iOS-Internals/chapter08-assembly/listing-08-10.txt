Listing 8-10: The XNU 64-bit common system call handler
        
Entry(hndl_syscall)
        TIME_TRAP_UENTRY
        movq    %gs:CPU_KERNEL_STACK,%rdi
        xchgq   %rdi,%rsp                       /* switch to kernel stack */
        movq    %gs:CPU_ACTIVE_THREAD,%rcx      /* get current thread     */
        movq    %rdi, ACT_PCB_ISS(%rcx)
        movq    ACT_TASK(%rcx),%rbx             /* point to current task  */
        /* Check for active vtimers in the current task */
        TASK_VTIMER_CHECK(%rbx,%rcx)
        /*
         * We can be here either for a mach, unix machdep or diag syscall,
         * as indicated by the syscall class:
         */
        movl    R64_RAX(%rdi), %eax             /* syscall number/class */
        movl    %eax, %edx
        andl    $(SYSCALL_CLASS_MASK), %edx     /* syscall class */
        cmpl    $(SYSCALL_CLASS_MACH<<SYSCALL_CLASS_SHIFT), %edx
        je      EXT(hndl_mach_scall64)
        cmpl    $(SYSCALL_CLASS_UNIX<<SYSCALL_CLASS_SHIFT), %edx
        je      EXT(hndl_unix_scall64)
        cmpl    $(SYSCALL_CLASS_MDEP<<SYSCALL_CLASS_SHIFT), %edx
        je      EXT(hndl_mdep_scall64)
        cmpl    $(SYSCALL_CLASS_DIAG<<SYSCALL_CLASS_SHIFT), %edx
        je      EXT(hndl_diag_scall64)
        /* Syscall class unknown */
        CCALL3(i386_exception, $(EXC_SYSCALL), %rax, $1)